---
- name: Install OS package dependencies
  become: yes
  become_user: root
  with_items: '{{ anaconda_dep_pkgs | default([]) }}'
  loop_control:
    loop_var: anaconda_os_pkg
  package:
    state: present
    name: '{{ anaconda_os_pkg }}'

- name: Create an Anaconda service user.
  user:
    name: '{{ anaconda_service_user }}'
    home: /var/lib/{{ anaconda_service_user }}
    shell: /sbin/nologin

- name: Make the install directory and change ownership to service account
  file:
    path: '{{ anaconda_install_dir }}'
    owner: '{{ anaconda_service_user }}'
    group: '{{ anaconda_service_user }}'
    state: directory
    mode: 0755

- name: Check for installation of Anaconda
  become: yes
  stat:
    path: '{{ anaconda_install_dir }}/bin/conda'
  changed_when: false
  register: anaconda_conda_binary

- when: not anaconda_conda_binary.stat.exists
  block:
    - name: Download Anaconda installer.
      become: yes
      become_user: '{{ anaconda_service_user }}'
      get_url:
        url: '{{anaconda_installer_url}}'
        dest: /tmp/{{anaconda_installer_sh}}
        timeout: '{{anaconda_timeout_seconds}}'
        checksum: '{{anaconda_checksum}}'
        mode: 0755

    - name: Run Anaconda installer.
      become: yes
      become_user: '{{ anaconda_service_user }}'
      command: bash /tmp/{{anaconda_installer_sh}} -b -f -p {{anaconda_install_dir}}

  always:
    - name: Delete Anaconda installer.
      become: yes
      become_user: '{{ anaconda_service_user }}'
      file:
        path: /tmp/{{anaconda_installer_sh}}
        state: absent

# Is conda-curl even installed by default or is this just another Blackrock thing?
- name: Remove conda-curl since it conflicts with the system curl
  become: yes
  become_user: '{{ anaconda_service_user }}'
  command: '{{anaconda_install_dir}}/bin/conda remove -y curl'
  ignore_errors: true


# Normally we could run something like '{{anaconda_install_dir}}/bin/conda init --system'
# to do this.  However, since we have custom post-install hooks that commit changes 
# to environments to a git repo, we use a custom wrapper around the conda command.
- name: Add Anaconda to universal bash profile.
  become: yes
  become_user: root
  copy:
    src: conda.sh
    dest: /etc/profile.d/conda.sh
  when: anaconda_make_sys_default and not anaconda_conda_binary.stat.exists

# All directories / files will be owned by the service user's group
# so that it can read/write as necessary for various back-up and other maintenance operations.
- name: Create centralized location for user environments and package caches.
  become: yes
  become_user: root
  file:
    path: '{{ anaconda_user_storage }}'
    owner: '{{ anaconda_service_user }}'
    group: '{{ anaconda_service_user }}'
    state: directory
    mode: 02777

- name: Use environment variables to make user environments and package caches stored in a centralized location
  become: yes
  become_user: root
  template:
    src: conda-storage.sh.j2
    dest: /etc/profile.d/conda-storage.sh

- name: Add conda base environment file.
  become: yes
  become_user: '{{ anaconda_service_user }}'
  copy:
    content: '{{ anaconda_base_env | to_nice_yaml }}'
    dest: /tmp/anaconda-base.yml
  when: anaconda_base_env is defined

- name: Install additional packages to universal install / add default packages to shared package cache.
  become: yes
  become_user: '{{ anaconda_service_user }}'
  command: '{{anaconda_install_dir}}/bin/conda env update -f=/tmp/anaconda-base.yml'
  when: anaconda_base_env is defined

- name: Remove conda base environment file.
  become: yes
  become_user: '{{ anaconda_service_user }}'
  file:
    path: /tmp/anaconda-base.yml
    state: absent
  when: anaconda_base_env is defined

# We don't do anything other than refresh the cache because Anaconda
# has a tendency to break things, like conda itself...
# I encountered this while testing without '--download-only':
# https://github.com/conda/conda/issues/9367
- name: Refresh the package cache to include latest versions.
  become: yes
  become_user: '{{ anaconda_service_user }}'
  when: anaconda_pkg_update
  command: '{{anaconda_install_dir}}/bin/conda update -y --all --download-only'

- name: Add scripts to back-up user environments, update shared package cache, and prune individual user package caches.
  become: yes
  become_user: '{{ anaconda_service_user }}'
  template:
    src: "{{ item }}"
    dest: "{{anaconda_install_dir}}/bin/{{ item | replace('.j2','') }}"
    mode: 0700
  with_items:
    - conda-storage-clean.sh.j2
    - conda-cache-update.sh.j2

- name: Add cronjobs to back-up user environments, update shared package cache, and prune individual user package caches.
  become: yes
  become_user: '{{ anaconda_service_user }}'
  cron:
    name: "{{ item.name }}"
    minute: "{{ item.minute }}"
    hour: "{{ item.hour }}"
    day: "{{ item.day }}"
    month: "{{ item.month }}"
    weekday: "{{ item.weekday }}"
    user: '{{ anaconda_service_user }}'
    job: "{{anaconda_install_dir}}/bin/{{ item.command }}"
  with_items: "{{ anaconda_cron_list }}"
